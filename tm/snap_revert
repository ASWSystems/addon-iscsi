#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2013, OpenNebula Project (OpenNebula.org), C12G Labs        #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# snap_revert host:remote_system_ds/disk.i snapshot_id vm_id ds_id
#   - host is the target host to deploy the VM
#   - remote_system_ds is the path for the system datastore in the host
#   - snapshot_id the id of the snapshot to be created/reverted to/deleted
#   - vm_id is the id of the VM
#   - ds_id is the target datastore

SRC=$1
SNAP_ID=$2
VMID=$3
DSID=$4

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

DRIVER_PATH=$(dirname $0)

. $TMCOMMON


source ${DRIVER_PATH}/../../datastore/iscsi/iscsi.conf

DISK_ID=$(echo $SRC|awk -F. '{print $NF}')

#-------------------------------------------------------------------------------
# Get image information
#-------------------------------------------------------------------------------

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x $VMID| $XPATH \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/SOURCE \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/CLONE)

IQN="${XPATH_ELEMENTS[j++]}"
CLONE="${XPATH_ELEMENTS[j++]}"

#-------------------------------------------------------------------------------
# IQN and TARGETs
#-------------------------------------------------------------------------------

VG_NAME=`echo $IQN|$AWK -F. '{print $(NF-1)}'`
LV_NAME=`echo $IQN|$AWK -F. '{print $(NF)}'`

if [ "$CLONE" = "YES" ]; then
    DISK_DEV="/dev/$VG_NAME/$LV_NAME-$VMID"
    SNAP_LV_NAME="$LV_NAME-$VMID.$SNAP_ID"
else
    DISK_DEV="/dev/$VG_NAME/$LV_NAME"
    SNAP_LV_NAME="$LV_NAME.$SNAP_ID"
fi

TARGET=`arg_path $IQN`
TARGET_HOST="${TARGET%.$VG_NAME.$LV_NAME}"
SNAP_DEV="/dev/$VG_NAME/$SNAP_LV_NAME"

COPY_CMD=$(cat <<EOF

    # copy snap to disk with dd
    $SUDO $DD if=$SNAP_DEV of=$DISK_DEV bs=2M
EOF
)

ssh_exec_and_log "$TARGET_HOST" "$COPY_CMD" \
        "Error reverting snapshot $TARGET_HOST:$SNAP_DEV"
